{"ast":null,"code":"import _Provider from \"@ant-design/react-native/lib/provider\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { loadAsync } from 'expo-font';\nimport { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isReady = _useState2[0],\n    setReadyState = _useState2[1];\n  var loadAsyncAll = function loadAsyncAll() {\n    return Promise.all([loadAsync('antoutline', require('@ant-design/icons-react-native/fonts/antoutline.ttf')), loadAsync('antfill', require('@ant-design/icons-react-native/fonts/antfill.ttf'))]);\n  };\n  useEffect(function () {\n    loadAsyncAll().then(function (res) {\n      return setReadyState(true);\n    });\n  });\n  if (isReady) {\n    return _jsx(_Provider, {\n      children: _jsxs(SafeAreaProvider, {\n        children: [_jsx(View, {\n          children: _jsx(Text, {\n            children: \"loaded\"\n          })\n        }), _jsx(StatusBar, {\n          style: \"auto\"\n        })]\n      })\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(View, {\n      children: _jsx(Text, {\n        children: \"loading...\"\n      })\n    })\n  });\n}","map":{"version":3,"names":["loadAsync","useEffect","useState","Text","View","StatusBar","PixelRatio","Dimensions","useColorScheme","SafeAreaProvider","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isReady","setReadyState","loadAsyncAll","Promise","all","require","then","res","_Provider","children","style"],"sources":["/Users/gavin/Documents/src/open_course/packages/normal/48_rn_coding/0604/code/App.js"],"sourcesContent":["import { Provider } from '@ant-design/react-native';\nimport { loadAsync } from 'expo-font';\nimport { useEffect, useState } from 'react';\nimport {  Text, View, StatusBar, PixelRatio, Dimensions, useColorScheme } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n\n  const [ isReady, setReadyState ] = useState(false);\n\n  const loadAsyncAll = () => Promise.all([\n    loadAsync(\n      'antoutline',\n      require('@ant-design/icons-react-native/fonts/antoutline.ttf')\n    ),\n    loadAsync(\n      'antfill',\n      require('@ant-design/icons-react-native/fonts/antfill.ttf')\n    ),\n  ]);\n\n  useEffect(() => {\n    loadAsyncAll().then(res => setReadyState(true))\n  })\n\n  if(isReady) {\n    return <Provider>\n      <SafeAreaProvider>\n        <View><Text>loaded</Text></View>\n        <StatusBar style=\"auto\" />\n      </SafeAreaProvider>\n    </Provider>\n  }\n\n  return <View>\n      <View><Text>loading...</Text></View>\n  </View>\n}\n\n"],"mappings":";;AACA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,cAAA;AAE5C,SAASC,gBAAgB,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAmCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,OAAO,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAE9B,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA;IAAA,OAASC,OAAO,CAACC,GAAG,CAAC,CACrCtB,SAAS,CACP,YAAY,EACZuB,OAAO,CAAC,qDAAqD,CAC/D,CAAC,EACDvB,SAAS,CACP,SAAS,EACTuB,OAAO,CAAC,kDAAkD,CAC5D,CAAC,CACF,CAAC;EAAA;EAEFtB,SAAS,CAAC,YAAM;IACdmB,YAAY,CAAC,CAAC,CAACI,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIN,aAAa,CAAC,IAAI,CAAC;IAAA,EAAC;EACjD,CAAC,CAAC;EAEF,IAAGD,OAAO,EAAE;IACV,OAAOP,IAAA,CAAAe,SAAA;MAAAC,QAAA,EACLd,KAAA,CAACJ,gBAAgB;QAAAkB,QAAA,GACfhB,IAAA,CAACP,IAAI;UAAAuB,QAAA,EAAChB,IAAA,CAACR,IAAI;YAAAwB,QAAA,EAAC;UAAM,CAAM;QAAC,CAAM,CAAC,EAChChB,IAAA,CAACN,SAAS;UAACuB,KAAK,EAAC;QAAM,CAAE,CAAC;MAAA,CACV;IAAC,CACX,CAAC;EACb;EAEA,OAAOjB,IAAA,CAACP,IAAI;IAAAuB,QAAA,EACRhB,IAAA,CAACP,IAAI;MAAAuB,QAAA,EAAChB,IAAA,CAACR,IAAI;QAAAwB,QAAA,EAAC;MAAU,CAAM;IAAC,CAAM;EAAC,CAClC,CAAC;AACT"},"metadata":{},"sourceType":"module"}